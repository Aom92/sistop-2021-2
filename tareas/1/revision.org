# Revisi√≥n de la tarea 1
#+options: toc:nil num:nil

* Criterios de calificaci√≥n

- Documentaci√≥n :: 2 puntos
- Programa funcional :: 2 puntos
- Planteamiento resuelto satisfactoriamente :: 3 puntos
- Aplicaci√≥n de los principios vistos en clase :: 3 puntos

* Problema del /asesor y los alumnos/

** Alejandro Antonio
- Documentaci√≥n :: [[./AntonioAlejandro/Plantemiento.txt][Plantemiento.txt]]
- Archivos :: [[./AntonioAlejandro/AsesorAlumnos.py][AsesorAlumnos.py]]
- Comentarios ::
  - ¬°Muy buena implementaci√≥n!
  - Me llam√≥ la atenci√≥n que un alumno espere consistentemente a
    escuchar la pregunta de su siguiente compa√±ero antes de irse
    (despu√©s de que le respondieron su √∫ltima palabra). ¬øSon chismosos
    los alumnos?

    Podr√≠as haberlo solucionado si el =sleep(0.2)= fuera antes de
    adquirir =capacidad= y =atenci√≥n=, o que esperaras de forma
    condicional a =num_pregunta < preguntas_totales=
  - Me parece que en situaciones de alta contenci√≥n, podr√≠a colarse
    una pregunta entre que un alumno suelta al mutex =atencion= y el
    asesor los toma. Creo que una soluci√≥n m√°s limpia ser√≠a /pasarse
    la estafeta/: Que el alumno obtuviera el mutex, despertara al
    asesor mediante una se√±alizaci√≥n, y el asesor soltara el mutex
    (tal como lo haces con =capacidad=).
    - No estoy seguro de la necesidad de diferenciar =capacidad= de
      =atencion=: El l√≠mite de capacidad del cub√≠culo lo pones con
      =cubiculo=. Pero no analic√© a detalle.
- Calificaci√≥n :: 10

** Oswaldo Cabrera y Hanna Ceres
- Documentaci√≥n :: [[./CabreraOswaldo-CeresHanna/README.md][README.md]]
- Archivos :: [[./CabreraOswaldo-CeresHanna/alumnoYasesor.py][alumnoYasesor.py]]
- Comentarios ::
  - ¬°Muy buena implementaci√≥n!
  - M√°s que usar un arreglo de =alumnos_con_dudas=, me gustar√≠a haber
    visto que representaran esto con un sem√°foro ‚Äî Se inicializa en 0,
    cada alumno que tiene una duda lo incrementa, y en vez del =while
    len(alumnos_con_dudas)!=0= podr√≠an haber hecho un simple
    =acquire()=; creo que resultar√≠a m√°s simple (aunque su respuesta
    es correcta, s√≥lo ser√≠a /m√°s mejor/)
  - Reconocieron a =despertar_asesor= como una /se√±alizaci√≥n/, aunque
    si la miran de cerca, se parece mucho-mucho a un /apagador/, ¬øno
    les parece?
- Calificaci√≥n :: 10

** Karen Reyes
- Documentaci√≥n :: [[./ReyesKaren/Tarea1.pdf][Tarea1.pdf]]
- Archivos :: [[./ReyesKaren/cubiculo.py][cubiculo.py]]
- Comentarios ::
  - ¬°Me gusta el estilo! Separar el problema en clases, un uso m√°s
    /idiom√°tico/ de =with miSemaforo:= en vez de acquire/release. ¬°Muy
    bien!
    - Me permito opinar respecto a tu jerarqu√≠a de clases: Si bien
      podr√≠as decir que un =Cubiculo= /tiene-un/ =profesor=, no es muy
      limpio que sea =cubiculo().asesoria()= el que genera a los hilos
      =alumno=: Los alumnos /ya instanciados/ acuden al =Cubiculo=
      para obtener respuestas del =profesor=. Yo sugerir√≠a modelarlo
      as√≠ en tu =main()=:
      #+begin_src python
	def main():
	    c = Cubiculo()
	    c.asesoria() # ‚Üí se convierte en self.profesor.start()
	    for alumno in num_alumnos():
		alumno.start(cubiculo=c)
      #+end_src
  - Lo del error que ocurre ocasionalmente est√° interesante: /casi/
    siempre (pero no siempre, ¬°benditas condiciones de carrera!) lo
    veo justo despu√©s de que un alumno termin√≥ de resolver sus dudas ‚Äî
    ¬°y es seguido de ese mismo alumno realizando otra pregunta!
    #+begin_src text
      Al alumno 2 ya se le respondieron todas las preguntas 
      Quedan 5 en el cub√≠culo
      Exception in thread Thread-26:
      Traceback (most recent call last):
	File "/usr/lib/python3.9/threading.py", line 954, in _bootstrap_inner
	  self.run()
	File "/usr/lib/python3.9/threading.py", line 892, in run
	  self._target(*self._args, **self._kwargs)
	File "/home/gwolf/vcs/sistop-2021-2/tareas/1/ReyesKaren/cubiculo.py", line 47, in entrar
	  self.alumnos_cub.remove(self.id)
      ValueError: list.remove(x): x not in list
      El alumno 2 hace una pregunta: Pregunta 1
      El alumno 2 est√° en espera de una respuesta
    #+end_src
    ... Me parece que tienes una condici√≥n de carrera sobre la lista
    de alumnos en el cub√≠culo (=alumnos_cub=). Varios alumnos la
    modifican a la vez. ¬øIntentaste protegerla con un mutex?
- Calificaci√≥n :: 2 + 2 + 2.5 + 3 = *9*

* Problema de /Santa Claus/

** Jorge Ceballos
- Documentaci√≥n :: [[./CeballosJorge/README.md][README.md]]
- Archivos :: [[./CeballosJorge/SantaClaus.py][SantaClaus.py]]
- Comentarios ::
  - ¬°Ay mis ojooooos! Íô¨ En ingl√©s, /reno/ se dice /reindeer/ (no
    /reigndeer/)... ¬°Me cuesta trabajo leer el c√≥digo con /24/ casos
    de la misma falta de ortograf√≠a
    - ...no pasa nada, no es en tu lengua materna... Pero igual me
      hace llorar ‚òπ
  - Tu programa no se ejecuta porque empleaste dos variables que no
    /cuadran/ con su definici√≥n: En las l√≠neas 84 y 89 haces
    referencia respectivamente a =l= y =k=, pero en los ciclos
    respectivos est√°s usando =z= y =y=.
  - Tanto en elfos como en renos, no proteges de acceso simult√°neo a
    la variable contador, =total_reigndeers= y =totalElves=.
  - Entiendo que eres mayor de edad y ya no crees en Santa,
    pero... ¬øMatarlo as√≠ de gacho? Vamos, Santa existe, eval√∫a la
    situaci√≥n /una √∫nica vez/, y... aunque hay un =while True=, el
    =break= de la l√≠nea 72 hace que se salga inmediatamente despu√©s de
    su segunda invocaci√≥n (despu√©s de la segunda vez que alguien haga
    un =wakeUpSanta.release()=)
  - No entiendo el funcionamiento de =elvesInCharge= / =elfSemaphore=,
    pero creo que son en buena medida las culpables de que los elfos
    dejen de trabajar despu√©s de poco tiempo.
- Calificaci√≥n :: 2 + 1 + 1.5 + 3 = *7.5*

** Rene Vazquez
- Documentaci√≥n :: [[./VazquezRene/DocumentacionTarea1SO.txt][DocumentacionTarea1SO.txt]]
- Archivos :: [[./VazquezRene/Tarea1SO.py][Tarea1SO.py]]
- Comentarios ::
  - No s√© en qu√© lenguaje hayas intentado la implementaci√≥n... Pero
    esto no es Python.
    - Tiene pedazos de sem√°ntica de Python, pedazos de sintaxis
      pseudo-C... ¬ø...?
  - En ning√∫n momento se ve (ni en pseudoc√≥digo) que inicies los
    distintos himos
  - Esperas por un =papaSem=, pero no lo defines en ning√∫n lugar.
  - La indentaci√≥n no me indica el flujo l√≥gico del programa; indentas
    y des-indentas sin que pueda entender el por qu√©.
  - Este es un ejercicio que se resuelve fundamentalmente con barreras
    (y reinicios a cero) y con se√±alizaciones, pero no veo nada por el
    estilo.
- Calificaci√≥n :: 2 + 0 + 0 + 1.5 = *3.5*

* Problema del /Cruce del r√≠o/

** Victor Hernandez
- Documentaci√≥n :: [[./HernandezVictor/HernandezVictor.txt][HernandezVictor.txt]]
- Archivos :: [[./HernandezVictor/cruceDelRio.py][cruceDelRio.py]]
- Comentarios ::
  - La documentaci√≥n con que acompa√±as a tu tarea... Decir que es
    m√≠nima es ya decir mucho ‚òπ ¬°Cuida la forma de tus entregas! Dice
    mucho de tu trabajo.
  - Ejecut√© varias veces tu c√≥digo; no lleg√≥ a cruzar exitosamente ni
    una (siempre se queda en bloqueo mutuo, tengo que interrumpir con
    Ctrl-C ‚òπ) Y present√≥ varios comportamientos extra√±os:
    - No respeta el planteamiento, entra un n√∫mero impar de /serfs/:
      #+begin_src text
	$ python3 cruceDelRio.py 
	Balsa esperando....
	Balsa esperando....
	Balsa esperando....
	Balsa esperando....
	Hacker 4 subi√≥ a la balsa
	Serf 1 subi√≥ a la balsa
	Hacker 4 subi√≥ a la balsa
	Hacker 4 subi√≥ a la balsa
      #+end_src
    - El mismo /hacker/ ocupa varios asientos de la balsa:
      #+begin_src text
	$ python3 cruceDelRio.py 
	Balsa esperando....
	Balsa esperando....
	Balsa esperando....
	Balsa esperando....
	Hacker 4 subi√≥ a la balsa
	Hacker 5 subi√≥ a la balsa
	Hacker 5 subi√≥ a la balsa
	Hacker 5 subi√≥ a la balsa
      #+end_src
      Veo que al imprimir la lista de pasajeros imprimes ya sea a
      =serfs= o a =hackers=, que son contadores; hay que reemplazar a
      ambas (l√≠neas 27 y 40) por =yo=. 
  - Me gusta que tu programa est√© parametrizado, declarando
    =umbral_balsa= al principio. Sin embargo, en las tres funciones
    =serf()=, =hacker()= y =balsa()= haces la comparaci√≥n con los
    valores literales 4 y 2.
  - Te enredaste al mandar las se√±ales. =serfs()= adquiere
    =mutex_serfs()=, pero nunca la libera (esa es la raz√≥n por la que
    nunca sube m√°s de un =serf=). =balsa()= recibe correctamente la
    se√±alizaci√≥n con =sem_balsa=, y adquiere y libera tanto
    =mutex_serfs= como =mutex_hackers=.
  - Me parece que el bloqueo se debe a la comparaci√≥n en las l√≠neas
    50, 53 y 56 con =hackers == 4=, =serfs == 4= y
    =serfs == 2 and hackers == 2=; no estoy seguro, pero me aprece que
    entre el =sem_balsa.release()= y que =balsa()= hace
    =mutex_hackers.acquire()= puede estarse /colando/ alg√∫n otro hilo
    y aumentando el contador. Pero no quiero asegurarte que el
    problema est√° ah√≠... ‚òπ
- Calificaci√≥n :: 1 + 1.5 + 1.5 + 3 = *7*

* Problema de /gatos y ratones/

** Hugo Juarez Perez
- Documentaci√≥n :: [[./JuarezPerezHugo/README.txt][README.txt]]
- Archivos :: [[./JuarezPerezHugo/Sync-Hugo.cpp][Sync-Hugo.cpp]]
- Comentarios ::
  - ¬øC√≥digo en C++? ¬°Un nuevo reto! ¬°Me gusta! (me gusta el reto... No
    me gusta C++ üòâ
    - No lo pude compilar ‚òπ Incluso dando =-std=c++20= me marca varios
      errores horrendos:
      #+begin_src text
	Sync-Hugo.cpp:15:6: error: ‚Äòcounting_semaphore‚Äô in namespace ‚Äòstd‚Äô does not name a template type
	   15 | std::counting_semaphore<2>Plato(0);
	      |      ^~~~~~~~~~~~~~~~~~
	Sync-Hugo.cpp:16:6: error: ‚Äòbinary_semaphore‚Äô in namespace ‚Äòstd‚Äô does not name a type; did you mean ‚Äòbinary_search‚Äô?
	   16 | std::binary_semaphore RatonesComiendo(0);
	      |      ^~~~~~~~~~~~~~~~
      #+end_src
      El uso que haces de estas funciones me parece legal seg√∫n los
      est√°ndares... pero a =g++= no ‚òπ
    - Asumo como culpa m√≠a no poder compilar tu c√≥digo...
  - ¬°Me gusta c√≥mo resolviste el "intentar implementar" el acuerdo
    entre caballeros! A m√≠ no me gusta =try_acquire()= en general, y
    no lo ense√±o... Pero la implementaci√≥n lo incluye, y permite
    llegara a esta esquinita poco com√∫n (la realidad es que es
    bastante poco com√∫n que un programa bien implementado con
    sincronizaci√≥n cause ratones ara√±ados o devorados...)
    - Me parece que =actualRatonId = -1= y =ratonesComiendo.release()=
      (l√≠neas 44 y 45) s√≠ asumen que atrapaste y mataste al rat√≥n,
      ¬øno? ¬øNo llevan a que el sistema quede con =ratonesComiendo=
      desbalanceado?
  - Ojo: ¬°No est√°s protegiendo a =Ratones_presentes= de acceso
    simult√°neo!
- Calificaci√≥n :: 2 + 2 + 2 + 3 = 9

** Luis Mario Perez
- Documentaci√≥n :: [[./PerezLuisMario/docs.md][docs.md]]
- Archivos :: [[./PerezLuisMario/cats_and_mice.py][cats_and_mice.py]]
- Comentarios ::
  - ¬°Muy buena implementaci√≥n, detallando muy bien la l√≥gica del
    apagador con todos los casos!
  - El programa como lo presentas tiene un gran desbalance que
    dificulta ver el desarrollo: 2 gatos y... ¬°200 ratones! Adem√°s, va
    a toda la velocidad que Python le permite, as√≠ que todos los
    comportamientos interesantes se van. Bajando =number_of_mice= a
    algo m√°s manejable (5, 10), el comportamiento se ve como lo
    esperar√≠a.
  - Metiendo un par de puntos de intercambio de control (=sleep(0.1)=)
    pude ver que efectivamente manejas correctamente que un gato
    /tenga que/ comerse a un rat√≥n (contrario a lo que dije de las
    implementaciones m√°s comunmente hechas por los alumnos, en mi
    respuesta anterior):
    #+begin_src text
      Rat√≥n 1 est√° entrando a zona de platos
      Rat√≥n 0 est√° entrando a zona de platos
      Rat√≥n 2 est√° entrando a zona de platos
      Rat√≥n 3 est√° entrando a zona de platos
      Rat√≥n 4 est√° entrando a zona de platos
      Gato 0 est√° comiendo de plato 5
      Gato 0 termin√≥ de comer de plato 5
      Rat√≥n 1 est√° comiendo de plato 3
      Rat√≥n 1 termin√≥ de comer de plato 3
      Rat√≥n 0 est√° comiendo de plato 4
      Rat√≥n 0 termin√≥ de comer de plato 4
      Rat√≥n 2 est√° comiendo de plato 2
      Rat√≥n 2 termin√≥ de comer de plato 2
      Rat√≥n 3 est√° comiendo de plato 1
      Rat√≥n 3 termin√≥ de comer de plato 1
      Rat√≥n 4 est√° comiendo de plato 6
      Rat√≥n 4 termin√≥ de comer de plato 6
      Rat√≥n 1 muri√≥ a garras de Gato 0
      Rat√≥n 2 muri√≥ a garras de Gato 0
      Rat√≥n 4 muri√≥ a garras de Gato 0
      Rat√≥n 3 muri√≥ a garras de Gato 0
      Rat√≥n 0 muri√≥ a garras de Gato 0
      Gato 1 est√° entrando a zona de platos
      Gato 0 est√° dejando la zona de platos
    #+end_src
    ... ¬°Un verdadero raticidio! ‚òπ
- Calificaci√≥n :: 10
